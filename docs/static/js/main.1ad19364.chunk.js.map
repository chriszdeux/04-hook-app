{"version":3,"sources":["components/08-useReducer/AddTodo.js","hook/useForm.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["TodoForm","handleAddTodo","initialState","useState","inputValue","setInputValue","resetForm","handleInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","lenght","newAdd","id","Date","getTime","done","type","className","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","key","onClick","TodoList","todos","map","myReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","length","todoId","console","log","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad19364.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from '../../hook/useForm';\r\n\r\nexport const TodoForm = ( { handleAddTodo } ) => {\r\n\r\n  const [ { description }, handleInputChange, resetForm ] = useForm({\r\n    description: ''\r\n  }); \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( description.trim().lenght <=  1) {\r\n      return\r\n    }\r\n\r\n    \r\n    const newAdd = {\r\n      id: new Date().getTime(),\r\n      description: description,\r\n      done: false\r\n    };\r\n\r\n\r\n    handleAddTodo(newAdd);\r\n    resetForm();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4>Add Todo</h4>\r\n      <hr/>\r\n      <form onSubmit={ handleSubmit }>\r\n        <input type=\"text\" \r\n        className=\"form-control\"\r\n        placeholder=\"add todo\"\r\n        autoComplete=\"off\"\r\n        name=\"description\"\r\n        value={ description }\r\n        onChange={ handleInputChange }\r\n        />\r\n      <button className=\"btn btn-outline-primary mt-1 btn-block\">Add</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n  const [inputValue, setInputValue] = useState( initialState );\r\n\r\n  const resetForm = () => {\r\n    setInputValue( initialState )\r\n  }\r\n  const handleInputChange = ( { target } ) => {\r\n    setInputValue({\r\n      ...inputValue,\r\n      // remember to compute the name with the value\r\n      [target.name]:target.value,\r\n    })\r\n  }\r\n\r\n  // const handleInputSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   // console.log( inputValue )\r\n  //   // return event;\r\n  //   // debugger\r\n  // }\r\n\r\n  return [ inputValue, handleInputChange, resetForm]\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n  return (\r\n    <li key={ todo.id } className=\"list-group-item\">\r\n      <p className={ `${ todo.done && 'complete' }` } onClick={ () => handleToggle(todo.id) }>\r\n        {index + 1}. {todo.description}  \r\n      </p>\r\n      <button className=\"btn btn-danger\"\r\n      onClick={ () => {\r\n        handleDelete(todo.id)\r\n      } }\r\n      >Delete</button>\r\n    </li>\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n  return (\r\n      <ul className=\"list-group list-group-flush\">\r\n            {\r\n              //TodoListItem todolist, todo, index, handleDelete, handleToggle\r\n              todos.map( (todo, index) => (\r\n                <TodoListItem\r\n                  key={todo.id} \r\n                  todo={todo}\r\n                  index={index}\r\n                  handleDelete={ handleDelete }\r\n                  handleToggle={ handleToggle }\r\n                />\r\n              ))\r\n            }\r\n      </ul>\r\n  )\r\n}\r\n","export const myReducer = ( state = [], action ) => {\r\n  switch ( action.type ) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n      // return [action.payload, ...state]\r\n      \r\n    case 'del':\r\n      return state.filter(todo => todo.id !== action.payload)\r\n\r\n    case 'toggle':\r\n      return state.map( todo => \r\n        \r\n        ( todo.id === action.payload )\r\n          ? { ...todo, done: !todo.done }\r\n          : todo\r\n      )  \r\n    default: return state;\r\n    \r\n  }\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport './todo-style.css';\r\nimport { TodoForm } from './AddTodo';\r\nimport { TodoList } from './TodoList';\r\nimport { myReducer } from './todoReducer';\r\n\r\n\r\nconst init = () => {\r\n\r\n  return JSON.parse( localStorage.getItem('todos') ) || []\r\n}\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n  const [ todos, dispatch ] = useReducer(myReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n\r\n  const handleDelete = (todoId) => {\r\n    console.log(todoId)\r\n\r\n    const delAction = {\r\n      type: 'del',\r\n      payload: todoId\r\n    }\r\n\r\n    dispatch(delAction)\r\n\r\n  }\r\n\r\n\r\n  const handleToggle = ( todoId ) => {\r\n    const actionToggle = {\r\n      type: 'toggle',\r\n      payload: todoId\r\n    }\r\n\r\n    dispatch(actionToggle)\r\n  }\r\n\r\n  const handleAddTodo = ( newTodo ) => {\r\n    dispatch({\r\n      type: 'add',\r\n      payload: newTodo,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>TodoApp: { todos.length }</h1>\r\n      <hr/>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-7\">\r\n            < TodoList \r\n            todos={ todos }\r\n            handleDelete={ handleDelete }\r\n            handleToggle={ handleToggle }/>\r\n          </div>\r\n          \r\n          <div className=\"col-5\">\r\n            <TodoForm \r\n            handleAddTodo={ handleAddTodo }\r\n            />\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { TodoApp } from './components/08-useReducer/TodoApp';\r\n\r\n// import { CallbackHook } from './components/06-useMemo/CallbackHook';\r\n// import { Memorize } from './components/06-useMemo/Memorize';\r\n// import { FormCustomHook } from './components/02-useEffect/FormCustomHook';\r\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\r\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\r\n// import { CounterApp } from './components/01-useState/CounterApp';\r\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\r\n// import { FormUseEffect } from './components/02-useEffect/FormUseEffect';\r\n// import {Padre} from './components/07-exercise-memo/Padre'\r\n\r\n\r\nReactDOM.render(< TodoApp />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}